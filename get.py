# -*- coding: utf-8 -*-  

import json
import urllib
import urllib2
import module_parse
import push

sensor_name = ["WenDu","MenCi","FengXiang","FengLi","DaQiYa","ShiDu","LiuSu"]
id_0 = "0330ca89-bb24-40f2-8a02-0518ffb4a70a"
id_1 = "2b4cf469-e4de-429f-bf26-bf6d8ca46311"
id_2 = "734cacac-0312-48e0-a92d-6cd78377826a"
id_4 = "14ab8592-e78d-491d-a9ad-9caa9cc17f64"
id_5 = "3ca2cd46-bb1b-4c09-9cfa-d27bf8e749fc"

def getData(offset):
	resource_dict = {
		"resource_id":"60000630-f011-4040-bbae-29f7e63e5a5c",
		"limit":1,
		"offset":offset,
		"sort":"_id asc"
	}

	json_coded = json.dumps(resource_dict)
	post_dict = urllib.quote(json_coded)

	post_url = "http://202.121.178.214/api/3/action/datastore_search"
	request = urllib2.Request(post_url)

	request.add_header('Authorization','dbf651ea-71cf-4c78-844a-8f7bf3db81e2')

	response = urllib2.urlopen(request,post_dict)
	assert response.code == 200

	response_dict = json.loads(response.read())
	assert response_dict['success'] is True

	#print response_dict
	#print response_dict["result"]
	#print response_dict
	newOffset = response_dict["result"]["total"]
	#print newOffset
	#k = offset
	#response_dict['result']['records'] = "1007100001140Eb90100D120005+14.3Eb9010091000102.2Eb9010079000129Eb9010091000104.3Eb90100D120005+14.4Eb901007100001157Eb90100D120005+14.3Eb9010091000104.3Eb90100D120005+14.4Eb901007100001346Eb90"
	for record in response_dict['result']['records']:
	#record = response_dict['result']['records'][0]
		#print record
		#k = 1 + k
		#print k
		#print "ok"

		result = {}
	#result["date"] = record['date']
		date = record["date"]
	#print date
		date = module_parse.time_parse(date)
		result["date"] = date

		result["transmitter"] = record['transmitter']

		data = record['data']
		#data = "100D120005+14.3Eb901007100001126Eb9010091000102.1Eb9010079000114Eb9010091000102.9Eb9010079000135Eb90100D120005+14.3Eb9010091000101.7Eb90100D120005+14.3Eb9010079000195Eb90100D120005+14.3Eb9010079000114Eb9010091000101.9Eb90100D120005+14.3Eb9010079000137Eb9010091000101.9Eb901007100001161Eb9010091000104.0Eb901007100001122Eb9010091000104.0Eb90100D120005+14.1Eb901007100001260Eb9010091000100.8Eb90100D120005+14.1Eb9010091000103.3Eb90100D120005+14.1Eb90100D120005+14.1Eb9010091000103.3Eb901007100001139Eb9010091000102.1Eb90100D120005+14.1Eb901007100001249Eb90100D120005+14.1Eb9010091000103.3Eb90100D120005+14.1Eb901007100001138Eb90100D120005+14.1Eb9010091000103.3Eb9010091000101.2Eb9010079000144Eb9010091000102.1Eb90100D120005+14.1Eb901007100001186Eb90100D120005+14.1Eb9010091000102.1Eb90100D120005+14.0Eb901007100001209Eb90100D120005+14.1Eb9010091000102.2Eb90100D120005+14.1Eb901007800019Eb90100D120005+14.1Eb9010091000104.3Eb90100D120005+14.1Eb901007100001338Eb9010091000104.3Eb90100D120005+14.0Eb901007100001131Eb9010091000103.5Eb90100D120005+14.1Eb9010091000105.4Eb90100D120005+14.0Eb9010091000105.4Eb90100D120005+14.0Eb901007100001264Eb9010091000101.5Eb90100D120005+14.0Eb901007100001247Eb90100D120005+14.0Eb9010091000101.9Eb9010079000151Eb90100D120005+14.0Eb9010091000101.9Eb901007100001109Eb90100D120005+14.0Eb9010091000101.4Eb901007100001190Eb9010091000101.5Eb90100D120005+14.0Eb901007100001153Eb90100D120005+14.0Eb9010091000101.5Eb9010091000101.0Eb90100D120005+14.0Eb9010079000145Eb90100D120005+14.1Eb901007100001174Eb90100D120005+14.1Eb9010091000101.2Eb901007100001193Eb90100D120005+14.1Eb901007100001348Eb9010091000101.7Eb90100D120005+14.1Eb901007100001342Eb9010091000101.7Eb90100D120005+14.1Eb9010091000102.1Eb90100D120005+14.1Eb9010079000127Eb9010091000101.7Eb90100D120005+14.1Eb9010091000101.7Eb90100D120005+14.1Eb901007800017Eb90100D120005+14.1Eb9010091000100.8Eb90100D120005+14.1Eb901007100001190Eb90100D120005+14.1Eb9010091000101.2Eb9010079000182Eb90100D120005+14.1Eb9010091000101.2Eb901007100001350Eb90100D120005+14.1Eb9010091000103.6Eb90100D120005+14.0Eb9010079000120Eb90100D120005+14.1Eb9010091000101.9Eb90100D120005+14.0Eb9010079000138Eb90100D120005+14.0Eb9010091000101.9Eb90100D120005+14.0Eb9010079000146Eb90100D120005+14.0Eb9010091000101.9Eb90100D120005+14.0Eb9010079000115Eb9010091000101.9Eb90100D120005+14.0Eb901007100001188Eb9010091000101.9Eb901007100001357Eb9010091000101.7Eb901007100001106Eb9010091000101.5Eb90100D120005+14.0Eb9010079000147Eb90100D120005+14.0Eb9010091000101.5Eb901007100001338Eb90100D120005+14.0Eb9010091000101.7Eb901007100001114Eb90100D120005+14.0Eb901007100001354Eb90100D120005+14.0Eb9010091000101.9Eb9010079000177Eb90100D120005+14.0Eb9010091000101.5Eb90100D120005+14.1Eb901007100001114Eb90100D120005+14.1Eb9010091000100.7Eb901007100001111Eb90100D120005+14.0Eb9010079000162Eb90100D120005+14.1Eb9010091000100.8Eb9010079000176Eb90100D120005+14.0Eb9010091000101.7Eb90100D120005+14.0Eb901007100001123Eb90100D120005+14.0Eb9010091000101.7Eb901007100001102Eb9010091000102.8Eb90"
		#data = "1010140002100.29Eb9010091000101.2Eb901007100001198Eb901010140002100.29Eb901010140002100.29Eb9010091000101.0Eb901007100001195Eb901010140002100.29Eb901010140002100.29Eb9010091000101.0Eb901007100001222Eb901010140002100.29Eb901010140002100.29Eb9010091000101.4Eb901007100001226Eb901010140002100.29Eb901010140002100.29Eb9010091000101.2Eb901007100001140Eb901010140002100.29Eb901010140002100.29Eb9010091000101.2Eb901007100001239Eb901010140002100.29Eb901010140002100.29Eb9010091000100.8Eb901007100001204Eb901010140002100.29Eb901010140002100.29Eb9010091000103.5Eb901007100001172Eb901010140002100.29Eb901010140002100.29Eb9010091000103.5Eb901007100001146Eb901010140002100.29Eb901010140002100.29Eb9010091000101.7Eb901007100001165Eb90"
		#data = "10091000102.6Eb901010140002100.28Eb901007100001174Eb90100D120005+23.8Eb901010140002100.26Eb90100D120005+23.8Eb9010091000102.8Eb901010140002100.27Eb901007100001122Eb90100D120005+23.8Eb901010140002100.28Eb9010091000102.8Eb901010140002100.28Eb901007100001179Eb90100D120005+23.8Eb901010140002100.27Eb9010091000103.1Eb901010140002100.28Eb901007100001171Eb90100D120005+23.8Eb901010140002100.29Eb90100D120005+23.9Eb9010091000102.2Eb901010140002100.28Eb9010079000190Eb90100D120005+23.8Eb901010140002100.28Eb90100D120005+23.8Eb9010091000102.2Eb901010140002100.28Eb901007100001179Eb901010140002100.27Eb9010091000101.5Eb901010140002100.27Eb901007100001179Eb90100D120005+23.8Eb901010140002100.28Eb9010091000103.8Eb90"
		sensorValue = module_parse.data_parse(data)
		#print sensorValue
	#result['data'] = sensorValue
		for i in range(0,len(sensorValue)):
			result[sensor_name[i]] = sensorValue[sensor_name[i]]

		head = record['head']
		location = module_parse.location_parse(head)
	#print location
		result['x'] = location["x"]
		result['y'] = location["y"]

		#result["transmitter"] = str(result["transmitter"])
		#print result
		#result = {"date":"1","transmitter":"1","WenDu":"1","MenCi":"1",
		#"FengXiang":"1","FengLi":"1","LiuSu":"1","ShiDu":"1","DaQiYa":"1","x":"1","y":"1"}
		print result

		#if result["transmitter"] == "FYLZ0":
		#	push.pushData(id_0,result)
		#elif result["transmitter"] == "FYLZ01":
		#	push.pushData(id_1,result)
		#elif result["transmitter"] == "FYLZ02":
		#	push.pushData(id_2,result)
		#elif result["transmitter"] == "FYLZ04":
		#	push.pushData(id_4,result)
		#elif result["transmitter"] == "FYLZ05":
		#	push.pushData(id_5,result)
	#return result
	#return id
	return newOffset
#offset = 12308
#offset = getData(offset)
#print "offset"
#print offset
#getData(1)